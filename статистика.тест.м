взяти статистика як то

тестовий_випадок("Обрахування середнього степеневого", дія()
  припустити(то.статистика.середнє_степеневе([1, 2, 3, 4, 5], 1)).дорівнює(3)
  припустити(то.статистика.середнє_степеневе([1, 2, 3, 4, 5, 6], 1)).дорівнює(3.5)
  припустити(то.статистика.середнє_степеневе([-1, 0, 5, 1, 3], 1)).дорівнює(1.6)
  припустити(то.статистика.середнє_степеневе([1.1, 5.6, 2.4, 7.9], 1)).дорівнює(4.25)
  припустити(то.статистика.середнє_степеневе([4, 36, 45, 50, 75], -1)).дорівнює(15)
  припустити(то.статистика.середнє_степеневе([8, 8], 2)).дорівнює(8)
кінець)

тестовий_випадок("Обрахування середнього арифметичного", дія()
  припустити(то.статистика.середнє_арифметичне([1, 2, 3, 4, 5])).дорівнює(3)
  припустити(то.статистика.середнє_арифметичне([-1, 0, 5, 1, 3])).дорівнює(1.6)
  припустити(то.статистика.середнє_арифметичне([1.1, 5.6, 2.4, 7.9])).дорівнює(4.25)
кінець)

тестовий_випадок("Обрахування середнього геометричного", дія()
  припустити(global.Math.round(то.статистика.середнє_геометричне([4, 36, 45, 50, 75])*(10**12))/(10**12)).дорівнює(30)
кінець)

тестовий_випадок("Обрахування середнього гармонійного", дія()
  припустити(то.статистика.середнє_гармонійне([4, 36, 45, 50, 75])).дорівнює(15)
кінець)

тестовий_випадок("Обрахування середнього квадратичного", дія()
  припустити((global.Math.round(то.статистика.середнє_квадратичне([8, 8]))*(10**12))/(10**12)).дорівнює(8)
кінець)

тестовий_випадок("Обрахування середнього кубічного", дія()
  припустити((global.Math.round(то.статистика.середнє_кубічне([8, 8]))*(10**12))/(10**12)).дорівнює(8)
кінець)

тестовий_випадок("Обрахування середнього розмаху", дія()
  припустити(то.статистика.середнє_розмаху([1, 2, 3, 4, 5])).дорівнює(3)
  припустити(то.статистика.середнє_розмаху([-1, 0, 5, 1, 3])).дорівнює(2)
  припустити(то.статистика.середнє_розмаху([1.1, 5.6, 2.4, 7.9])).дорівнює(4.5)
кінець)

тестовий_випадок("Обрахування розмаху", дія()
  припустити(то.статистика.розмах([1, 2, 3, 4, 5])).дорівнює(4)
  припустити(то.статистика.розмах([-1, 0, 5, 1, 3])).дорівнює(6)
  припустити(то.статистика.розмах([1.1, 5.6, 2.4, 7.9, 10])).дорівнює(8.9)
кінець)

тестовий_випадок("Обрахування міжквартильного розмаху", дія()
  припустити(то.статистика.міжквартильний_розмах([1, 2, 3, 4, 5])).дорівнює(3)
  припустити(то.статистика.міжквартильний_розмах([-1, 0, 5, 1, 3])).дорівнює(4.5)
  припустити(то.статистика.міжквартильний_розмах([3, 1, 5, 3, 6, 7, 2, 9])).дорівнює(4)
  припустити(то.статистика.міжквартильний_розмах([1, 5, 9, 4])).дорівнює(4.5)
кінець)

тестовий_випадок("Обрахування медіани", дія()
  припустити(то.статистика.медіана([1, 2, 3, 4, 5])).дорівнює(3)
  припустити(то.статистика.медіана([1, 1, 3, 3, 100])).дорівнює(3)
  припустити(то.статистика.медіана([100, 3, 1, 1, 3])).дорівнює(3)
  припустити(то.статистика.медіана([1.1, 5.6, 2.4, 7.9])).дорівнює(4)
  припустити(то.статистика.медіана([-1, 0, 5, 1, 3, 3])).дорівнює(2)
  припустити(то.статистика.медіана([1, 50, 51, 100])).дорівнює(50.5)
кінець)

тестовий_випадок("Обрахування високої медіани", дія()
  припустити(то.статистика.висока_медіана([1, 50, 51, 100])).дорівнює(51)
  припустити(то.статистика.висока_медіана([1.1, 5.6, 2.4, 7.9])).дорівнює(5.6)
кінець)

тестовий_випадок("Обрахування низької медіани", дія()
  припустити(то.статистика.низька_медіана([1, 50, 51, 100])).дорівнює(50)
  припустити(то.статистика.низька_медіана([1.1, 5.6, 2.4, 7.9])).дорівнює(2.4)
кінець)

тестовий_випадок("Обрахування моди", дія()
  припустити(то.статистика.мода([1, 2, 3, 4, 5])).дорівнює(1)
  припустити(то.статистика.мода([1, 1, 3, 3, 100])).дорівнює(1)
  припустити(то.статистика.мода([100, 3, 1, 1, 3])).дорівнює(3)
  припустити(то.статистика.мода([100, -25.6, 56, -25.6])).дорівнює(-25.6)
  припустити(то.статистика.мода([2, "к", так, ні, "к", так])).дорівнює("к")
кінець)

тестовий_випадок("Обрахування мультимоди", дія()
  припустити(то.статистика.мультимода([1, 2, 3, 4, 5])).еквівалентний_списку([1, 2, 3, 4, 5])
  припустити(то.статистика.мультимода([1, 1, 3, 3, 100])).еквівалентний_списку([1, 3])
  припустити(то.статистика.мультимода([100, 3, 1, 1, 3])).еквівалентний_списку([3, 1])
  припустити(то.статистика.мультимода([100, -25.6, 56, -25.6])).еквівалентний_списку([-25.6])
  припустити(то.статистика.мультимода([2, "к", так, ні, "к", так])).еквівалентний_списку(["к", так])
кінець)

тестовий_випадок("Обрахування дисперсії", дія()
  припустити(то.статистика.дисперсія([-10, 0, 10, 20, 30])).дорівнює(200)
  припустити(то.статистика.дисперсія([8, 9, 10, 11, 12], ні)).дорівнює(2)
  припустити(то.статистика.дисперсія([8, 9, 10, 11, 12], так)).дорівнює(2.5)
кінець)

тестовий_випадок("Обрахування стандартного відхилення", дія()
  припустити(то.статистика.стандартне_відхилення([-5, 0, 5, 10, 15])).дорівнює(7.0710678118654755) ;; √50
  припустити(то.статистика.стандартне_відхилення([4, 4.5, 5, 5.5, 6], ні)).дорівнює(0.7071067811865476) ;; √0.5
  припустити(то.статистика.стандартне_відхилення([4, 4.5, 5, 5.5, 6], так)).дорівнює(0.7905694150420949) ;; √0.625
кінець)

дія перевірка_чи_падає(назва текст, статистична_дія Дія, дозволяти_не_числа_в_списку логічне = ні) пусто
  тестовий_випадок("%(назва) падає при неправильному вводі", дія()
  припустити((): статистична_дія(5)).падає()
  припустити((): статистична_дія("текст")).падає()
  припустити((): статистична_дія(так)).падає()
  припустити((): статистична_дія(ні)).падає()
  припустити((): статистична_дія([])).падає()
  якщо дозволяти_не_числа_в_списку == ні
    припустити((): статистична_дія([1, 2, "к"])).падає()
    припустити((): статистична_дія([1, 2, [5]])).падає()
  кінець
кінець)
кінець

перевірка_чи_падає("Функція перевірки вхідних даних", то.статистика.перевірити_вхідні_дані)
перевірка_чи_падає("Середнє степеневе", то.статистика.середнє_степеневе)
перевірка_чи_падає("Середнє арифметичне", то.статистика.середнє_арифметичне)
перевірка_чи_падає("Середнє геометричне", то.статистика.середнє_геометричне)
перевірка_чи_падає("Середнє гармонійне", то.статистика.середнє_гармонійне)
перевірка_чи_падає("Середнє квадратичне", то.статистика.середнє_квадратичне)
перевірка_чи_падає("Середнє кубічне", то.статистика.середнє_квадратичне)
перевірка_чи_падає("Середнє розмаху", то.статистика.середнє_розмаху)
перевірка_чи_падає("Розмах", то.статистика.розмах)
перевірка_чи_падає("Міжквартильний розмах", то.статистика.міжквартильний_розмах)
перевірка_чи_падає("Медіана", то.статистика.медіана)
перевірка_чи_падає("Висока медіана", то.статистика.висока_медіана)
перевірка_чи_падає("Низька медіана", то.статистика.низька_медіана)
перевірка_чи_падає("Мода", то.статистика.мода, так)
перевірка_чи_падає("Мультимода", то.статистика.мультимода, так)
перевірка_чи_падає("Дисперсія", то.статистика.дисперсія)
перевірка_чи_падає("Стандартне відхилення", то.статистика.стандартне_відхилення)

тестовий_випадок("Дисперсія падає при неправильному другому аргументі", дія()
  припустити((): то.статистика.дисперсія([-5, 0, 5, 10, 15], 5)).падає()
  припустити((): то.статистика.дисперсія([-5, 0, 5, 10, 15], "к")).падає()
кінець)

тестовий_випадок("Стандартне відхилення падає при неправильному другому аргументі", дія()
  припустити((): то.статистика.стандартне_відхилення([-5, 0, 5, 10, 15], 5)).падає()
  припустити((): то.статистика.стандартне_відхилення([-5, 0, 5, 10, 15], "к")).падає()
кінець)
